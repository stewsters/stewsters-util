buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.5.0"
    }
}
plugins {
    id 'groovy'
    id 'idea'
    id 'maven-publish'
    id "me.champeau.gradle.jmh" version "0.5.0"
}
repositories {
    mavenCentral()
    jcenter()
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all"
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.stewsters.util'
version = '0.20'

dependencies {
    testImplementation  'junit:junit:4.13.2'
    testImplementation  "org.codehaus.groovy:groovy-all:3.0.8"
}

if (!project.hasProperty('bintray_net_user')) {
    project.ext.bintray_net_user = 'default'
}
if (!project.hasProperty('bintray_net_key')) {
    project.ext.bintray_net_key = 'fake'
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}


jmh {
    iterations = 5
    fork = 5
    warmupIterations = 5

    jmhVersion = '1.19'
}

